---
- name: Ensure /etc/ssh/sshd_config.d directory exists
  ansible.builtin.file:
    path: /etc/ssh/sshd_config.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Generate Ed25519 host key if missing or invalid
  ansible.builtin.command:
    cmd: ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""
    creates: /etc/ssh/ssh_host_ed25519_key
  notify: restart sshd

- name: Generate ECDSA host key if missing or invalid
  ansible.builtin.command:
    cmd: ssh-keygen -t ecdsa -b 256 -f /etc/ssh/ssh_host_ecdsa_key -N ""
    creates: /etc/ssh/ssh_host_ecdsa_key
  notify: restart sshd

- name: Remove weak RSA and DSA host keys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_rsa_key.pub
    - /etc/ssh/ssh_host_dsa_key
    - /etc/ssh/ssh_host_dsa_key.pub
  notify: restart sshd

- name: Set correct permissions for host keys
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: root
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { path: /etc/ssh/ssh_host_ed25519_key, group: root, mode: '0600' }
    - { path: /etc/ssh/ssh_host_ed25519_key.pub, group: root, mode: '0644' }
    - { path: /etc/ssh/ssh_host_ecdsa_key, group: root, mode: '0600' }
    - { path: /etc/ssh/ssh_host_ecdsa_key.pub, group: root, mode: '0644' }

- name: Deploy hardened SSH configuration
  ansible.builtin.copy:
    dest: /etc/ssh/sshd_config.d/hardening.conf
    owner: root
    group: root
    mode: '0644'
    content: |
      # SSH Hardening Configuration
      # Generated by Ansible - do not edit manually
      
      # Network settings
      Port 22
      AddressFamily inet
      ListenAddress 0.0.0.0
      
      # Protocol and encryption
      Protocol 2
      
      # Host key algorithms (Ed25519 and ECDSA only)
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_ecdsa_key
      
      # Key exchange algorithms (modern, secure)
      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512
      
      # Cipher algorithms (AES-GCM preferred, compatible with Termius/macOS)
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      
      # MAC algorithms (secure, compatible)
      MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256,hmac-sha2-512
      
      # Public key algorithms (Ed25519 and ECDSA support)
      PubkeyAcceptedAlgorithms ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521
      
      # Authentication settings
      PubkeyAuthentication yes
      PasswordAuthentication no
      PermitEmptyPasswords no
      ChallengeResponseAuthentication no
      KerberosAuthentication no
      GSSAPIAuthentication no
      UsePAM yes
      
      # Root login and user restrictions
      PermitRootLogin no
      MaxAuthTries 3
      MaxSessions 10
      MaxStartups 10:30:60
      LoginGraceTime 60
      
      # Security features
      StrictModes yes
      IgnoreRhosts yes
      HostbasedAuthentication no
      PermitUserEnvironment no
      AllowAgentForwarding yes
      AllowTcpForwarding yes
      GatewayPorts no
      X11Forwarding no
      PrintMotd no
      PrintLastLog yes
      TCPKeepAlive yes
      Compression no
      ClientAliveInterval 300
      ClientAliveCountMax 2
      
      # Disable unused features
      AllowStreamLocalForwarding no
      PermitTunnel no
      
      # Logging
      SyslogFacility AUTHPRIV
      LogLevel VERBOSE
  notify: restart sshd

- name: Validate SSH configuration
  ansible.builtin.command:
    cmd: sshd -t
  changed_when: false
  register: sshd_config_test

- name: Fail if SSH configuration is invalid
  ansible.builtin.fail:
    msg: "SSH configuration validation failed: {{ sshd_config_test.stderr }}"
  when: sshd_config_test.rc != 0